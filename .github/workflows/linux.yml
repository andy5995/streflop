name: Linux CI
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches: [ trunk ]
    paths:
    - '**'
    - '!**.md'
    - '!**.yml'
    - '**/linux.yml'
  pull_request:
    branches: [ trunk ]
    paths:
    - '**'
    - '!**.md'
    - '!**.yml'
    - '**/linux.yml'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04, ubuntu-24.04-arm]
        cxx: [g++, clang++]
    runs-on: ${{ matrix.os }}
    env:
      CXX: ${{ matrix.cxx }}
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y --no-install-recommends pip
          sudo python3 -m pip install meson ninja

      - name: sse-nd Build and Test
        if: ${{ ! contains(matrix.os, 'arm') }}
        run: |
          meson setup _build -Dfpu=sse
          meson compile -C _build
          meson test -C _build

      - name: sse Build and Test
        if: ${{ ! contains(matrix.os, 'arm') }}
        run: |
          meson setup --reconfigure _build -Dfpu=sse -Ddenormals=true
          meson compile -C _build
          meson test -C _build

      - name: x87-nd Build and Test
        if: ${{ ! contains(matrix.os, 'arm') || matrix.cxx != 'clang++' }}
        run: |
          meson setup --reconfigure  _build -Ddefault_library=static -Dfpu=x87 -Ddenormals=false
          meson compile -C _build
          meson test -C _build

      - name: x87 Build and Test
        if: ${{ ! contains(matrix.os, 'arm') || matrix.cxx != 'clang++' }}
        run: |
          meson setup --reconfigure  _build -Dfpu=x87 -Ddenormals=true
          meson compile -C _build
          meson test -C _build

      - name: soft Build and Test
        run: |
          meson setup --reconfigure  _build -Ddefault_library=shared -Dfpu=soft -Ddenormals=true
          meson compile -C _build
          meson test -C _build
